<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<j:VGroup
	xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:js="library://ns.apache.org/royale/basic"
	xmlns:mx="library://ns.apache.org/royale/mx"
	xmlns:j="library://ns.apache.org/royale/jewel"
	xmlns:html="library://ns.apache.org/royale/html"
	xmlns="*"
	initComplete="onInit()">

	<fx:Metadata>
		[Event(name="close")]
		[Event(name="select")]
	</fx:Metadata>	
	
	<fx:Script>
		<![CDATA[
			import mx.rpc.events.ResultEvent;

			import org.apache.royale.collections.ArrayList;

			public var selectedItem:Product;
			private var prevSearchStr:String;

			private function onInit():void
			{
				addEventListener(KeyboardEvent.KEY_DOWN, searchKeyDownHandler);
			}

			public function search(searchStr:String):void
			{
				if (searchStr == prevSearchStr)
				{
					// already showing results for this search
					return;
				}
				list.dataProvider = null;
				prevSearchStr = searchStr;
				srv.getProductsByName(searchStr);
			}
			
			protected function searchKeyDownHandler(event:KeyboardEvent):void
			{
				switch (event.key) 
				{
					case "Enter":
						openSelectedItem();
	    				break;
					case "Escape":
						dispatchEvent(new Event(Event.CLOSE));	
						break;
				}
			}
		
			public function openSelectedItem():void
			{
				selectedItem = list.selectedItem as Product;
				if (selectedItem)
				{
					dispatchEvent(new Event(Event.SELECT));	
				}
			}

			public function selectNext():void
			{
				list.selectedIndex++;
			}		
			
			public function selectPrevious():void
			{
				if (list.selectedIndex > 0)
				{
					list.selectedIndex--;
				}
			}		

			private function resultHandler(event:ResultEvent):void
			{
				list.dataProvider = event.result as ArrayList;
				if (list.dataProvider && list.dataProvider.length > 0)
				{
					list.selectedIndex = 0;
				}
			}
			
		]]>
	</fx:Script>

	<fx:Declarations>
		<mx:RemoteObject id="srv" endpoint="/samples/messagebroker/amf" destination="product">
			<mx:method name="getProductsByName" result="resultHandler(event)"/>
		</mx:RemoteObject>
	</fx:Declarations>

	<j:List id="list" width="100%" height="100%" labelField="name" click="openSelectedItem()"/>
	
</j:VGroup>